---
- name: Resource clean up
  hosts: 127.0.0.1
  connection: local
  gather_facts: false

  vars:
    resource_prefix: lingxian

    gcp_for_aws_cred_file: gcp-for-aws.json
    gcp_project: ""
    gcp_sa_name: "{{ resource_prefix }}-for-aws"
    gcp_sa_email: "{{ gcp_sa_name }}@{{ gcp_project }}.iam.gserviceaccount.com"

    aws_role: "{{ resource_prefix }}-for-gcp"

  tasks:
    - name: Get VM facts
      amazon.aws.ec2_instance_info:
        filters:
          tag:created_by: lingxian
      register: ec2_facts

    - debug:
        msg: "Deleting {{ item.instance_id }}"
      loop: "{{ ec2_facts.instances }}"
      when: ec2_facts.instances

    - name: Delete VMs
      amazon.aws.ec2_instance:
        state: absent
        instance_ids:
          - "{{ item.instance_id }}"
      loop: "{{ ec2_facts.instances }}"

    - name: Delete AWS role
      community.aws.iam_role:
        state: absent
        name: "{{ aws_role }}"
        delete_instance_profile: true
      when: aws_role != ""

    - name: Delete local GCP credentials file
      file:
        state: absent
        path: "{{ gcp_for_aws_cred_file }}"

    - name: Delete project policy bindings for GCP service account
      shell:
        executable: /bin/bash
        cmd: |
          set -ex
          roles=$(gcloud projects get-iam-policy {{ gcp_project }} \
            --flatten='bindings[].members' \
            --filter="bindings.members:serviceAccount:{{ gcp_sa_email }}" \
            --format="value(bindings.role)")
          for role in $roles; do
            gcloud projects remove-iam-policy-binding {{ gcp_project }} --member serviceAccount:{{ gcp_sa_email }} --role $role
          done

    - name: Delete GCP service account
      google.cloud.gcp_iam_service_account:
        name: "{{ gcp_sa_email }}"
        state: absent

